version: '3.1'
services:
  postgresql-book:
    image: postgres
    ports:
      - "8281:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - book-network

  book-service-api:
    image: book-service
    ports:
      - "8181:8080"
      - "8381:8381" # Debug port
    depends_on:
      postgresql-book:
        condition: service_healthy
    environment:
      - USER_API=http://user-service-api:8080/users/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql-book:5432/postgres?autoReconnect=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - book-network
      - book-user-network

  postgresql-user:
    image: postgres
    ports:
      - "8282:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - user-network

  user-service-api:
    image: user-service
    ports:
      - "8182:8080"
      - "8382:8382" # Debug port
    depends_on:
      postgresql-user:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql-user:5432/postgres?autoReconnect=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - user-network
      - book-user-network

  frontend:
    build: ./frontend
    ports:
      - "8080:80"
    networks:
      - book-user-network
networks:
  book-network:
  user-network:
  book-user-network:
